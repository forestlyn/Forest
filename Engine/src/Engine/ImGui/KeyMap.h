#pragma once
#include "Engine/Core/Core.h"
#include "Engine/Core/KeyCode.h"
#include "Engine/Core/MouseCode.h"
#include "imgui.h"
// ImGui KeyMap
namespace Engine::MyImGui
{
    static ImGuiMouseButton MouseCodeToImGuiMouseButton(int button)
    {
        switch (button)
        {
        case FOREST_MOUSE_BUTTON_LEFT:
            return ImGuiMouseButton_Left; // ImGui mouse button 0
        case FOREST_MOUSE_BUTTON_RIGHT:
            return ImGuiMouseButton_Right; // ImGui mouse button 1
        case FOREST_MOUSE_BUTTON_MIDDLE:
            return ImGuiMouseButton_Middle; // ImGui mouse button 2
        default:
            ENGINE_ASSERT(false, "Unknown mouse button code: {0}", button);
            return -1; // Unknown button
        }
    }

    static ImGuiKey KeyCodeToImGuiKey(int keycode)
    {
        switch (keycode)
        {
        case FOREST_KEY_TAB:
            return ImGuiKey_Tab;
        case FOREST_KEY_LEFT:
            return ImGuiKey_LeftArrow;
        case FOREST_KEY_RIGHT:
            return ImGuiKey_RightArrow;
        case FOREST_KEY_UP:
            return ImGuiKey_UpArrow;
        case FOREST_KEY_DOWN:
            return ImGuiKey_DownArrow;
        case FOREST_KEY_PAGE_UP:
            return ImGuiKey_PageUp;
        case FOREST_KEY_PAGE_DOWN:
            return ImGuiKey_PageDown;
        case FOREST_KEY_HOME:
            return ImGuiKey_Home;
        case FOREST_KEY_END:
            return ImGuiKey_End;
        case FOREST_KEY_INSERT:
            return ImGuiKey_Insert;
        case FOREST_KEY_DELETE:
            return ImGuiKey_Delete;
        case FOREST_KEY_BACKSPACE:
            return ImGuiKey_Backspace;
        case FOREST_KEY_SPACE:
            return ImGuiKey_Space;
        case FOREST_KEY_ENTER:
            return ImGuiKey_Enter;
        case FOREST_KEY_ESCAPE:
            return ImGuiKey_Escape;
        case FOREST_KEY_0:
            return ImGuiKey_0;
        case FOREST_KEY_1:
            return ImGuiKey_1;
        case FOREST_KEY_2:
            return ImGuiKey_2;
        case FOREST_KEY_3:
            return ImGuiKey_3;
        case FOREST_KEY_4:
            return ImGuiKey_4;
        case FOREST_KEY_5:
            return ImGuiKey_5;
        case FOREST_KEY_6:
            return ImGuiKey_6;
        case FOREST_KEY_7:
            return ImGuiKey_7;
        case FOREST_KEY_8:
            return ImGuiKey_8;
        case FOREST_KEY_9:
            return ImGuiKey_9;
        case FOREST_KEY_A:
            return ImGuiKey_A;
        case FOREST_KEY_B:
            return ImGuiKey_B;
        case FOREST_KEY_C:
            return ImGuiKey_C;
        case FOREST_KEY_D:
            return ImGuiKey_D;
        case FOREST_KEY_E:
            return ImGuiKey_E;
        case FOREST_KEY_F:
            return ImGuiKey_F;
        case FOREST_KEY_G:
            return ImGuiKey_G;
        case FOREST_KEY_H:
            return ImGuiKey_H;
        case FOREST_KEY_I:
            return ImGuiKey_I;
        case FOREST_KEY_J:
            return ImGuiKey_J;
        case FOREST_KEY_K:
            return ImGuiKey_K;
        case FOREST_KEY_L:
            return ImGuiKey_L;
        case FOREST_KEY_M:
            return ImGuiKey_M;
        case FOREST_KEY_N:
            return ImGuiKey_N;
        case FOREST_KEY_O:
            return ImGuiKey_O;
        case FOREST_KEY_P:
            return ImGuiKey_P;
        case FOREST_KEY_Q:
            return ImGuiKey_Q;
        case FOREST_KEY_R:
            return ImGuiKey_R;
        case FOREST_KEY_S:
            return ImGuiKey_S;
        case FOREST_KEY_T:
            return ImGuiKey_T;
        case FOREST_KEY_U:
            return ImGuiKey_U;
        case FOREST_KEY_V:
            return ImGuiKey_V;
        case FOREST_KEY_W:
            return ImGuiKey_W;
        case FOREST_KEY_X:
            return ImGuiKey_X;
        case FOREST_KEY_Y:
            return ImGuiKey_Y;
        case FOREST_KEY_Z:
            return ImGuiKey_Z;
        case FOREST_KEY_F1:
            return ImGuiKey_F1;
        case FOREST_KEY_F2:
            return ImGuiKey_F2;
        case FOREST_KEY_F3:
            return ImGuiKey_F3;
        case FOREST_KEY_F4:
            return ImGuiKey_F4;
        case FOREST_KEY_F5:
            return ImGuiKey_F5;
        case FOREST_KEY_F6:
            return ImGuiKey_F6;
        case FOREST_KEY_F7:
            return ImGuiKey_F7;
        case FOREST_KEY_F8:
            return ImGuiKey_F8;
        case FOREST_KEY_F9:
            return ImGuiKey_F9;
        case FOREST_KEY_F10:
            return ImGuiKey_F10;
        case FOREST_KEY_F11:
            return ImGuiKey_F11;
        case FOREST_KEY_F12:
            return ImGuiKey_F12;
        case FOREST_KEY_APOSTROPHE:
            return ImGuiKey_Apostrophe;
        case FOREST_KEY_COMMA:
            return ImGuiKey_Comma;
        case FOREST_KEY_MINUS:
            return ImGuiKey_Minus;
        case FOREST_KEY_PERIOD:
            return ImGuiKey_Period;
        case FOREST_KEY_SLASH:
            return ImGuiKey_Slash;
        case FOREST_KEY_SEMICOLON:
            return ImGuiKey_Semicolon;
        case FOREST_KEY_EQUAL:
            return ImGuiKey_Equal;
        case FOREST_KEY_LEFT_BRACKET:
            return ImGuiKey_LeftBracket;
        case FOREST_KEY_BACKSLASH:
            return ImGuiKey_Backslash;
        case FOREST_KEY_RIGHT_BRACKET:
            return ImGuiKey_RightBracket;
        case FOREST_KEY_GRAVE_ACCENT:
            return ImGuiKey_GraveAccent;
        case FOREST_KEY_CAPS_LOCK:
            return ImGuiKey_CapsLock;
        case FOREST_KEY_SCROLL_LOCK:
            return ImGuiKey_ScrollLock;
        case FOREST_KEY_NUM_LOCK:
            return ImGuiKey_NumLock;
        case FOREST_KEY_PRINT_SCREEN:
            return ImGuiKey_PrintScreen;
        case FOREST_KEY_PAUSE:
            return ImGuiKey_Pause;
        case FOREST_KEY_KP_0:
            return ImGuiKey_Keypad0;
        case FOREST_KEY_KP_1:
            return ImGuiKey_Keypad1;
        case FOREST_KEY_KP_2:
            return ImGuiKey_Keypad2;
        case FOREST_KEY_KP_3:
            return ImGuiKey_Keypad3;
        case FOREST_KEY_KP_4:
            return ImGuiKey_Keypad4;
        case FOREST_KEY_KP_5:
            return ImGuiKey_Keypad5;
        case FOREST_KEY_KP_6:
            return ImGuiKey_Keypad6;
        case FOREST_KEY_KP_7:
            return ImGuiKey_Keypad7;
        case FOREST_KEY_KP_8:
            return ImGuiKey_Keypad8;
        case FOREST_KEY_KP_9:
            return ImGuiKey_Keypad9;
        case FOREST_KEY_KP_DECIMAL:
            return ImGuiKey_KeypadDecimal;
        case FOREST_KEY_KP_DIVIDE:
            return ImGuiKey_KeypadDivide;
        case FOREST_KEY_KP_MULTIPLY:
            return ImGuiKey_KeypadMultiply;
        case FOREST_KEY_KP_SUBTRACT:
            return ImGuiKey_KeypadSubtract;
        case FOREST_KEY_KP_ADD:
            return ImGuiKey_KeypadAdd;
        case FOREST_KEY_KP_ENTER:
            return ImGuiKey_KeypadEnter;
        case FOREST_KEY_KP_EQUAL:
            return ImGuiKey_KeypadEqual;
        case FOREST_KEY_LEFT_CONTROL:
            return ImGuiKey_LeftCtrl;
        case FOREST_KEY_LEFT_SHIFT:
            return ImGuiKey_LeftShift;
        case FOREST_KEY_LEFT_ALT:
            return ImGuiKey_LeftAlt;
        case FOREST_KEY_LEFT_SUPER:
            return ImGuiKey_LeftSuper;
        case FOREST_KEY_RIGHT_CONTROL:
            return ImGuiKey_RightCtrl;
        case FOREST_KEY_RIGHT_SHIFT:
            return ImGuiKey_RightShift;
        case FOREST_KEY_RIGHT_ALT:
            return ImGuiKey_RightAlt;
        case FOREST_KEY_RIGHT_SUPER:
            return ImGuiKey_RightSuper;
        case FOREST_KEY_MENU:
            return ImGuiKey_Menu;
        default:
            ENGINE_ASSERT(false, "Unknown key code:" + keycode);
            return ImGuiKey_None; // Unknown key
        }
    }
}